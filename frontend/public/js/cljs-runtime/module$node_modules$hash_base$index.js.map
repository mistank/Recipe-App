{
"version":3,
"file":"module$node_modules$hash_base$index.js",
"lineCount":95,
"mappings":"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",
"sources":["node_modules/hash-base/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$hash_base$index\"] = function(global,require,module,exports) {\n'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('stream').Transform\nvar inherits = require('inherits')\n\nfunction HashBase (blockSize) {\n  Transform.call(this)\n\n  this._block = Buffer.allocUnsafe(blockSize)\n  this._blockSize = blockSize\n  this._blockOffset = 0\n  this._length = [0, 0, 0, 0]\n\n  this._finalized = false\n}\n\ninherits(HashBase, Transform)\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null\n  try {\n    this.update(chunk, encoding)\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype._flush = function (callback) {\n  var error = null\n  try {\n    this.push(this.digest())\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nvar useUint8Array = typeof Uint8Array !== 'undefined'\nvar useArrayBuffer = typeof ArrayBuffer !== 'undefined' &&\n  typeof Uint8Array !== 'undefined' &&\n  ArrayBuffer.isView &&\n  (Buffer.prototype instanceof Uint8Array || Buffer.TYPED_ARRAY_SUPPORT)\n\nfunction toBuffer (data, encoding) {\n  // No need to do anything for exact instance\n  // This is only valid when safe-buffer.Buffer === buffer.Buffer, i.e. when Buffer.from/Buffer.alloc existed\n  if (data instanceof Buffer) return data\n\n  // Convert strings to Buffer\n  if (typeof data === 'string') return Buffer.from(data, encoding)\n\n  /*\n   * Wrap any TypedArray instances and DataViews\n   * Makes sense only on engines with full TypedArray support -- let Buffer detect that\n   */\n  if (useArrayBuffer && ArrayBuffer.isView(data)) {\n    if (data.byteLength === 0) return Buffer.alloc(0) // Bug in Node.js <6.3.1, which treats this as out-of-bounds\n    var res = Buffer.from(data.buffer, data.byteOffset, data.byteLength)\n    // Recheck result size, as offset/length doesn't work on Node.js <5.10\n    // We just go to Uint8Array case if this fails\n    if (res.byteLength === data.byteLength) return res\n  }\n\n  /*\n   * Uint8Array in engines where Buffer.from might not work with ArrayBuffer, just copy over\n   * Doesn't make sense with other TypedArray instances\n   */\n  if (useUint8Array && data instanceof Uint8Array) return Buffer.from(data)\n\n  /*\n   * Old Buffer polyfill on an engine that doesn't have TypedArray support\n   * Also, this is from a different Buffer polyfill implementation then we have, as instanceof check failed\n   * Convert to our current Buffer implementation\n   */\n  if (\n    Buffer.isBuffer(data) &&\n    data.constructor &&\n    typeof data.constructor.isBuffer === 'function' &&\n    data.constructor.isBuffer(data)\n  ) {\n    return Buffer.from(data)\n  }\n\n  throw new TypeError('The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView.')\n}\n\nHashBase.prototype.update = function (data, encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n\n  data = toBuffer(data, encoding) // asserts correct input type\n\n  // consume data\n  var block = this._block\n  var offset = 0\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\n    this._update()\n    this._blockOffset = 0\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry\n    carry = (this._length[j] / 0x0100000000) | 0\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\n  }\n\n  return this\n}\n\nHashBase.prototype._update = function () {\n  throw new Error('_update is not implemented')\n}\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n  this._finalized = true\n\n  var digest = this._digest()\n  if (encoding !== undefined) digest = digest.toString(encoding)\n\n  // reset state\n  this._block.fill(0)\n  this._blockOffset = 0\n  for (var i = 0; i < 4; ++i) this._length[i] = 0\n\n  return digest\n}\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented')\n}\n\nmodule.exports = HashBase\n\n};"],
"names":["shadow$provide","global","require","module","exports","HashBase","blockSize","Transform","call","_block","Buffer","allocUnsafe","_blockSize","_blockOffset","_length","_finalized","toBuffer","data","encoding","from","useArrayBuffer","ArrayBuffer","isView","byteLength","alloc","res","buffer","byteOffset","useUint8Array","Uint8Array","isBuffer","constructor","TypeError","inherits","prototype","_transform","HashBase.prototype._transform","chunk","callback","error","update","err","_flush","HashBase.prototype._flush","push","digest","TYPED_ARRAY_SUPPORT","HashBase.prototype.update","Error","block","offset","length","i","_update","j","carry","HashBase.prototype._update","HashBase.prototype.digest","_digest","undefined","toString","fill","HashBase.prototype._digest"]
}
