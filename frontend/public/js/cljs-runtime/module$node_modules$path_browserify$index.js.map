{
"version":3,
"file":"module$node_modules$path_browserify$index.js",
"lineCount":140,
"mappings":"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",
"sources":["node_modules/path-browserify/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$path_browserify$index\"] = function(global,require,module,exports) {\nvar process = require('process');\n// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n};"],
"names":["shadow$provide","global","require","module","exports","normalizeArray","parts","allowAboveRoot","up","i","length","last","splice","unshift","filter","xs","f","res","push","process","resolve","exports.resolve","resolvedPath","resolvedAbsolute","arguments","path","cwd","TypeError","charAt","split","p","join","normalize","exports.normalize","isAbsolute","trailingSlash","substr","exports.isAbsolute","exports.join","paths","Array","prototype","slice","call","index","relative","exports.relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","concat","sep","delimiter","dirname","exports.dirname","code","charCodeAt","hasRoot","matchedSlash","basename","exports.basename","ext","extname","exports.extname","startDot","startPart","preDotState","str","len"]
}
