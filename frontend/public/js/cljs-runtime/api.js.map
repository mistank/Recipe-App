{"version":3,"sources":["api.cljs"],"mappings":";AAMA,oBAAA,pBAAMA;AAAN,AACE,IAAMC,QAAM,kDAAA,lDAACC,sDAAwB,AAAA,kGAAA,AAAAC,gBAAeC;IAC9CC,MAAI,CAAA,yCAAA,iBAA+DJ;AADzE,AAEE,IAAAK,mBAAA,AAAAC,mDAAA;AAAA,AAAA,AAAAC,kCAAA;AAAA,AAAA,IAAAC,mBAAA,iBAAAC,wBAAA,WAAAC;AAAA,AAAA,IAAAC,kBAAA,CAAAD,YAAA;AAAA,AAAA,GAAA,CAAAC,oBAAA;AAAA,IAAAC,aAAA,CAAA;IAAAC,aAAA,CAAA;IAAAC,aAAA,AAAAC,uCAAAH,WAAAC;IAAAG,aAAA,gHAAAF,hHACsBkC,0DAAS5C;IAD/BM,kBAAAA;AAAA,AAAA,OAAAO,4CAAAP,gBAAA,IAAAM;;AAAA,GAAA,CAAAL,oBAAA;AAAA,IAAAO,aAAA,CAAAR,YAAA;IAAAQ,iBAAA,CAAAR,YAAA;IAAAS,aAAA,AAAA,wFAAAD;IAAAE,aAAA,6CAAA,MAAAD,nDAES8B;IAFTvC,kBAAA,iBAAAW,iBAAAX;AAAA,AAAA,CAAAW,eAAA,OAAAH;;AAAAG;;AAAA,AAAA,AAAA,GAAAD;AAAA,IAAAE,uBAAAZ;AAAA,AAAA,CAAAY,qBAAA,OAAA;;AAAAA;AAAA,IAAAC,uBAAAb;AAAA,AAAA,CAAAa,qBAAA,OAAA;;AAAAA;;AAAA;;AAAA,GAAA,CAAAZ,oBAAA;AAAA,IAAAO,aAAA,CAAAR,YAAA;IAAAc,aAAA,AAAA,oFAAAN;IAAAO,aAAA,mFAAA,2DAAAD,9IAIO0B,mDAAM/C,gBAAUgD;IAJvBzC,kBAAAA;AAAA,AAAA,AAAA,IAAAgB,uBAAAhB;AAAA,AAAA,CAAAgB,qBAAA,OAAAD;;AAAA,CAAAC,qBAAA,OAAA;;AAAAA;AAAA;;AAAA,GAAA,CAAAf,oBAAA;AAAA,IAAAO,aAAA,CAAAR,YAAA;IAAAiB,aAAA,AAAA,wFAAAT;IAAAU,aAAA,AAAA,oFAAAV;IAAAW,aAAA,cAAA,0BAAAF,WAAAC,nDAMOwB;IANP1C,kBAAAA;AAAA,AAAA,AAAA,IAAAoB,uBAAApB;AAAA,AAAA,CAAAoB,qBAAA,OAAAD;;AAAA,CAAAC,qBAAA,OAAA;;AAAAA;AAAA;;AAAA,GAAA,CAAAnB,oBAAA;AAAA,IAAAoB,aAAA,CAAArB,YAAA;IAAAA,kBAAAA;AAAA,AAAA,OAAAsB,6CAAAtB,gBAAAqB;;AAAA;;;;;;;AAAA,AAAA;;;AAAA,AAAA,IAAAE,iBAAA,CAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA;AAAA,AAAA,CAAAA,eAAA,OAAAC;;AAAA,CAAAD,eAAA,OAAA;;AAAAA;;qEAAAvB;;AAAA,AAAA,IAAAyB,2BAAA,iBAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA,AAAA3B,sBAAAC;AAAA,AAAA,GAAA,AAAA2B,mCAAAD,sBAAA;AAAA;;AAAAA;;;;gBAAA,IAAAE,oBAAAC;AAAA,AAAA,IAAAC,uBAAA9B;AAAA,AAAA,CAAA8B,qBAAA,OAAAF;;AAAAE;AAAA,GAAA,AAAAC,cAAA,CAAA/B,YAAA;AAAA,IAAAgC,uBAAAhC;AAAA,AAAA,CAAAgC,qBAAA,OAAA,AAAAC,gBAAA,CAAAjC,YAAA;;AAAAgC;AAAA,MAAAJ;;;AAAA;;AAAA,AAAA,GAAA,AAAAD,mCAAAF,yBAAA;AAAA,eAAAzB;;;;AAAAyB;;;;;4DAAAzB;;;;;qEAAAA;;;;;;;;;IAAAkC,uBAAA,iBAAAC,iBAAA,AAAArC;AAAA,AAAA,CAAAqC,eAAAC,AAAA,OAAAzC;;AAAAwC;;AAAA,AAAA,OAAAE,2DAAAH;;;AAAAvC","names":["api/fetch-recipes","query","clojure.string.join","cljs.core/deref","state/app-state","url","c__11670__auto__","cljs.core.async.chan","cljs.core.async.impl.dispatch/run","f__11671__auto__","switch__11506__auto__","state_14909","state_val_14910","inst_14891","inst_14892","inst_14893","cljs.core/PersistentHashMap","inst_14894","cljs.core.async.impl.ioc-helpers/take!","inst_14896","inst_14897","inst_14898","statearr-14911","statearr-14912","statearr-14913","inst_14900","inst_14901","statearr-14914","inst_14903","inst_14904","inst_14905","statearr-14915","inst_14907","cljs.core.async.impl.ioc-helpers/return-chan","statearr-14916","state-machine__11507__auto__","ret-value__11508__auto__","result__11509__auto__","cljs.core/keyword-identical?","ex__11510__auto__","e14917","statearr-14918","cljs.core/seq","statearr-14919","cljs.core/first","state__11672__auto__","statearr-14920","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cljs_http.client.get","cljs.core._EQ_","cljs.core.swap_BANG_","cljs.core/assoc","js/console.error"],"sourcesContent":["(ns api\n  (:require [cljs-http.client :as http]\n            [cljs.core.async :refer [<!]]\n            [state :refer [app-state]])\n  (:require-macros [cljs.core.async.macros :refer [go]]))\n\n(defn fetch-recipes []\n  (let [query (clojure.string/join \",\" (:ingredients @app-state))\n        url (str \"https://www.themealdb.com/api/json/v2/\" \"/filter.php?i=\" query)]\n    (go\n      (let [response (<! (http/get url {:with-credentials? false}))]\n        (if (= 200 (:status response))\n          ;; Update app-state with the recipes\n          (swap! app-state assoc :recipes (:body response))\n          ;; Log an error in case of failure\n          (js/console.error \"Failed to fetch recipes\" (:status response) (:body response)))))))\n"]}